[{"path":[]},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://isee.github.io/iSEEu/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Universe of iSEE panels","text":"iSEE package (Rue-Albrecht et al. 2018) provides general flexible framework interactively exploring SummarizedExperiment objects. However, many cases, specialized panels required effective visualization specific data types. iSEEu package implements collection dedicated panel classes work directly iSEE application can smoothly interact panels. allows users quickly parametrize bespoke apps data address scientific questions interest. first load package: panels described document can deployed simply passing iSEE() function via initial= argument, shown following examples.","code":"library(iSEEu)"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"differential-expression-plots","dir":"Articles","previous_headings":"","what":"Differential expression plots","title":"Universe of iSEE panels","text":"demonstrate use panels, perform differential expression analysis airway dataset edgeR package. store resulting statistics rowData SummarizedExperiment can accessed iSEE panels. MAPlot class creates MA plot, .e., log-fold change y-axis average expression x-axis. Features significant differences direction highlighted counted legend. Users can vary significance threshold apply ad hoc filters log-fold change. subclass RowDataPlot points can transmitted panels multiple row selections. Instances class created like:  VolcanoPlot class creates volcano plot log-fold change x-axis negative log-p-value y-axis. Features significant differences direction highlighted counted legend. Users can vary significance threshold apply ad hoc filters log-fold change. subclass RowDataPlot points can transmitted panels multiple row selections. Instances class created like:  LogFCLogFCPlot class creates scatter plot two log-fold changes different DE comparisons. allows us compare DE results dataset - even different datasets, long row names shared. Users can vary significant threshold used identify DE genes either comparisons. subclass RowDataPlot points can transmitted panels multiple row selections. Instances class created like:","code":"library(airway) data(airway)  library(edgeR) y <- DGEList(assay(airway), samples=colData(airway)) y <- y[filterByExpr(y, group=y$samples$dex),] y <- calcNormFactors(y)  design <- model.matrix(~dex, y$samples) y <- estimateDisp(y, design) fit <- glmQLFit(y, design) res <- glmQLFTest(fit, coef=2)  tab <- topTags(res, n=Inf)$table rowData(airway) <- cbind(rowData(airway), tab[rownames(airway),]) ma.panel <- MAPlot(PanelWidth=6L) app <- iSEE(airway, initial=list(ma.panel)) vol.panel <- VolcanoPlot(PanelWidth=6L) app <- iSEE(airway, initial=list(vol.panel)) # Creating another comparison, this time by blocking on the cell line design.alt <- model.matrix(~cell + dex, y$samples) y.alt <- estimateDisp(y, design.alt) fit.alt <- glmQLFit(y.alt, design.alt) res.alt <- glmQLFTest(fit.alt, coef=2)  tab.alt <- topTags(res.alt, n=Inf)$table rowData(airway) <- cbind(rowData(airway), alt=tab.alt[rownames(airway),])  lfc.panel <- LogFCLogFCPlot(PanelWidth=6L, YAxis=\"alt.logFC\",      YPValueField=\"alt.PValue\") app <- iSEE(airway, initial=list(lfc.panel))"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"dynamically-recalculated-panels","dir":"Articles","previous_headings":"","what":"Dynamically recalculated panels","title":"Universe of iSEE panels","text":"demonstrate, perform quick analysis small dataset scRNAseq package. involves computing normalized expression values low-dimensional results using scater package. DynamicReducedDimensionPlot class creates scatter plot dimensionality reduction result, namely principal components analysis (PCA), tt-stochastic neighbor embedding (tt-SNE) uniform manifold approximate projection (UMAP). dynamically subset points selected transmitting panel, allowing users focus finer structure dealing heterogeneous population. Calculations performed using relevant functions scater package.  DynamicMarkerTable class dynamically computes basic differential statistics comparing assay values across groups multiple selections transmitting panel. active selection exists transmitting panel, comparison performed points selection unselected points. saved selections present, pairwise comparisons active selection saved selection performed results combined single table using findMarkers() function scran.","code":"library(scRNAseq) sce <- ReprocessedAllenData(assays=\"tophat_counts\")  library(scater) sce <- logNormCounts(sce, exprs_values=\"tophat_counts\") sce <- runPCA(sce, ncomponents=4) sce <- runTSNE(sce) # Receives a selection from a reduced dimension plot. dyn.panel <- DynamicReducedDimensionPlot(Type=\"UMAP\", Assay=\"logcounts\",     ColumnSelectionSource=\"ReducedDimensionPlot1\", PanelWidth=6L)  # NOTE: users do not have to manually create this, just  # copy it from the \"Panel Settings\" of an already open app. red.panel <- ReducedDimensionPlot(PanelId=1L, PanelWidth=6L,     BrushData = list(         xmin = -45.943, xmax = -15.399, ymin = -58.560,          ymax = 49.701, coords_css = list(xmin = 51.009,              xmax = 165.009, ymin = 39.009,              ymax = 422.009), coords_img = list(xmin = 66.313,              xmax = 214.514, ymin = 50.712,              ymax = 548.612), img_css_ratio = list(x = 1.300,              y = 1.299), mapping = list(x = \"X\", y = \"Y\"),          domain = list(left = -49.101, right = 57.228,              bottom = -70.389, top = 53.519),          range = list(left = 50.986, right = 566.922,              bottom = 603.013, top = 33.155),          log = list(x = NULL, y = NULL), direction = \"xy\",          brushId = \"ReducedDimensionPlot1_Brush\",          outputId = \"ReducedDimensionPlot1\"     ) )  app <- iSEE(sce, initial=list(red.panel, dyn.panel)) diff.panel <- DynamicMarkerTable(PanelWidth=8L, Assay=\"logcounts\",     ColumnSelectionSource=\"ReducedDimensionPlot1\",)  # Recycling the reduced dimension panel above, adding a saved selection to # compare to the active selection. red.panel[[\"SelectionHistory\"]] <- list(     BrushData = list(         xmin = 15.143, xmax = 57.228, ymin = -40.752,          ymax = 25.674, coords_css = list(xmin = 279.009,              xmax = 436.089, ymin = 124.009,              ymax = 359.009), coords_img = list(xmin = 362.716,              xmax = 566.922, ymin = 161.212,              ymax = 466.712), img_css_ratio = list(x = 1.300,              y = 1.299), mapping = list(x = \"X\", y = \"Y\"),          domain = list(left = -49.101, right = 57.228,              bottom = -70.389, top = 53.519),          range = list(left = 50.986, right = 566.922,              bottom = 603.013, top = 33.155),          log = list(x = NULL, y = NULL), direction = \"xy\",          brushId = \"ReducedDimensionPlot1_Brush\",          outputId = \"ReducedDimensionPlot1\"     ) ) red.panel[[\"PanelWidth\"]] <- 4L # To fit onto one line.  app <- iSEE(sce, initial=list(red.panel, diff.panel))"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"feature-set-table","dir":"Articles","previous_headings":"","what":"Feature set table","title":"Universe of iSEE panels","text":"FeatureSetTable() class bit unusual rows correspond dimension SummarizedExperiment. Rather, row feature set (e.g., GO KEGG) , upon click, transmits multiple row selection panels. multiple selection consists rows chosen feature set, allowing users identify positions genes pathway interest , say, volcano plot. also rare example panel transmits receive selections panels.","code":"setFeatureSetCommands(createGeneSetCommands(identifier=\"ENSEMBL\"))  gset.tab <- FeatureSetTable(Selected=\"GO:0002576\",      Search=\"platelet\", PanelWidth=6L)  # This volcano plot will highlight the genes in the selected gene set. vol.panel <- VolcanoPlot(RowSelectionSource=\"FeatureSetTable1\",     ColorBy=\"Row selection\", PanelWidth=6L)  app <- iSEE(airway, initial=list(gset.tab, vol.panel))"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"app-modes","dir":"Articles","previous_headings":"","what":"App modes","title":"Universe of iSEE panels","text":"iSEEu contains number “modes” allow users conveniently load iSEE instance one several common configurations: modeEmpty() launch empty app, .e., panels. occasionally useful jump landing page user can upload SummarizedExperiment object. modeGating() launch app multiple feature assay panels linked . useful applying sequential restrictions data, equivalent gating flow cytometry experiment. modeReducedDim() launch app multiple reduced dimension plots. useful examining different views large high-dimensional datasets (e.g., single-cell studies).","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"miscellaneous-panels","dir":"Articles","previous_headings":"","what":"Miscellaneous panels","title":"Universe of iSEE panels","text":"iSEEu also includes number panel types, one can find useful within different contexts. Coupled chunk code listed , possible display screenshot app showcasing . AggregatedDotPlot  can useful alternative ComplexHeatmapPlot panel, sometimes just shifts average expression levels, true biological signal can found e.g. scenarios differential detection. MarkdownBoard MarkdownBoard panel class renders Markdown notes, user-supplied, HTML display inside app. useful displaying information alongside panels, users simply jot notes (re-use efficiently later).  content MarkdownBoard included Data parameters portion panel, visible screenshot. iSEE take care rendering notes good-looking yet simple HTML, can embedded variety analytic workflows data inspection.","code":"app <- iSEE(     sce,     initial = list(         AggregatedDotPlot(             ColumnDataLabel=\"Primary.Type\",             CustomRowsText = \"Rorb\\nSnap25\\nFoxp2\",             PanelHeight = 500L,              PanelWidth = 8L         )       ) )  ## To be later run as... # app ## ... or # shiny::runApp(app) app <- iSEE(     sce,      initial = list(         MarkdownBoard(             Content = \"# `iSEE` notepad\\n\\nYou can enter anything here.\\n\\nA list of marker genes you might be interested into:\\n\\n- Snap25\\n- Rorb\\n- Foxp2\\n\\nThis makes it easier to copy-paste while staying inside `iSEE`.  \\nAs you can notice, the full power of markdown is at your service.\\n\\nHave fun exploring your data, in an even more efficient manner!\\n\",              PanelWidth = 8L,             DataBoxOpen = TRUE         )     ) )  ## To be later run as... # app ## ... or # shiny::runApp(app)"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"contributing-to-iseeu","dir":"Articles","previous_headings":"","what":"Contributing to iSEEu","title":"Universe of iSEE panels","text":"want contribute development iSEEu package, quick step--step guide: Fork iSEEu repository GitHub (https://github.com/iSEE/iSEEu) clone locally. Add desired new files - start R folder, document via roxygen2 - push fork. example can check understand things supposed work, several modes already defined R/ directory. typical contribution include e.g. function defining iSEE mode, named modeXXX, XXX provides clear representation purpose mode. Please place mode file , name function. function documented (including example), required packages added DESCRIPTION file. mode/function done, consider adding information package. examples might screenshot mode action (placed folder inst/modes_img), well-documented example use case (maybe entry vignettes folder). Also add contributor (ctb) DESCRIPTION file. Make pull request original repo - GitHub site offers practical framework , enabling comments, code reviews, goodies. iSEE core team evaluate contribution get back ! ’s pretty much !","code":"git clone https://github.com/[your_github_username]/iSEEu.git"},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"using-example-data-sets","dir":"Articles","previous_headings":"Contributing to iSEEu","what":"Using example data sets","title":"Universe of iSEE panels","text":"Example data sets can often obtained ExperimentHub package (e.g. scRNAseq package single-cell RNA-sequencing data), added iSEEu package.","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"documenting-testing-coding-style-and-conventions","dir":"Articles","previous_headings":"Contributing to iSEEu","what":"Documenting, testing, coding style and conventions","title":"Universe of iSEE panels","text":"possible, please consider adding example dedicated Roxygen preamble show run function possible, consider adding one unit tests - use testthat framework follow guidelines regarding names given variables, please abide consistency rest codebase. pointers: Keep indentation initial functions already available (4-spaces indentation). writing text (e.g. vignette), please use one sentence per line - makes git diff operations easier check. camelCase modes functions .function_name internals PanelClassName panels .genericFunction API .scope1.scope2.name variable names cached info intend understand depth internals iSEE framework, consider checking bookdown resource put together https://isee.github.io/iSEE-book/","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"looking-for-constants-within-isee","dir":"Articles","previous_headings":"Contributing to iSEEu","what":"Looking for constants within iSEE","title":"Universe of iSEE panels","text":"Many “global” variables used several places iSEE defined constants.R script iSEE. suggest refer constants actual value rather internal variable name downstream panel code. constant variable names values may change time, announce changes constant value.","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"what-if-i-need-a-custom-panel-type","dir":"Articles","previous_headings":"Contributing to iSEEu","what":"What if I need a custom panel type?","title":"Universe of iSEE panels","text":"addition eight standard panel types, custom panels easily accommodated within iSEE applications. guide, see corresponding vignette. examples, see repo.","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"where-can-i-find-a-comprehensive-introduction-to-isee","dir":"Articles","previous_headings":"Contributing to iSEEu","what":"Where can I find a comprehensive introduction to iSEE?","title":"Universe of iSEE panels","text":"iSEE package contains several vignettes detailing main functionality. can also take look workshop. compiled version Bioc2019 conference (based Bioconductor release 3.10) available .","code":""},{"path":"https://isee.github.io/iSEEu/articles/iSEEu.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Universe of iSEE panels","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] scater_1.33.4               ggplot2_3.5.1               ##  [3] scuttle_1.15.4              scRNAseq_2.19.1             ##  [5] edgeR_4.3.17                limma_3.61.12               ##  [7] airway_1.25.0               iSEEu_1.17.1                ##  [9] iSEEhex_1.7.1               iSEE_2.17.4                 ## [11] SingleCellExperiment_1.27.2 SummarizedExperiment_1.35.3 ## [13] Biobase_2.65.1              GenomicRanges_1.57.1        ## [15] GenomeInfoDb_1.41.2         IRanges_2.39.2              ## [17] S4Vectors_0.43.2            BiocGenerics_0.51.3         ## [19] MatrixGenerics_1.17.0       matrixStats_1.4.1           ## [21] BiocStyle_2.33.1            ##  ## loaded via a namespace (and not attached): ##   [1] splines_4.4.1            later_1.3.2              BiocIO_1.15.2            ##   [4] bitops_1.0-9             filelock_1.0.3           tibble_3.2.1             ##   [7] XML_3.99-0.17            lifecycle_1.0.4          httr2_1.0.5              ##  [10] doParallel_1.0.17        lattice_0.22-6           ensembldb_2.29.1         ##  [13] alabaster.base_1.5.9     magrittr_2.0.3           sass_0.4.9               ##  [16] rmarkdown_2.28           jquerylib_0.1.4          yaml_2.3.10              ##  [19] httpuv_1.6.15            DBI_1.2.3                RColorBrewer_1.1-3       ##  [22] abind_1.4-8              zlibbioc_1.51.1          Rtsne_0.17               ##  [25] AnnotationFilter_1.29.0  RCurl_1.98-1.16          rappdirs_0.3.3           ##  [28] circlize_0.4.16          GenomeInfoDbData_1.2.13  ggrepel_0.9.6            ##  [31] irlba_2.3.5.1            alabaster.sce_1.5.1      pkgdown_2.1.1.9000       ##  [34] codetools_0.2-20         DelayedArray_0.31.14     DT_0.33                  ##  [37] tidyselect_1.2.1         shape_1.4.6.1            UCSC.utils_1.1.0         ##  [40] viridis_0.6.5            ScaledMatrix_1.13.0      shinyWidgets_0.8.7       ##  [43] BiocFileCache_2.13.0     GenomicAlignments_1.41.0 jsonlite_1.8.9           ##  [46] BiocNeighbors_1.99.2     GetoptLong_1.0.5         iterators_1.0.14         ##  [49] systemfonts_1.1.0        foreach_1.5.2            tools_4.4.1              ##  [52] ragg_1.3.3               Rcpp_1.0.13              glue_1.8.0               ##  [55] gridExtra_2.3            SparseArray_1.5.44       xfun_0.48                ##  [58] mgcv_1.9-1               dplyr_1.1.4              HDF5Array_1.33.8         ##  [61] gypsum_1.1.6             shinydashboard_0.7.2     withr_3.0.1              ##  [64] BiocManager_1.30.25      fastmap_1.2.0            rhdf5filters_1.17.0      ##  [67] fansi_1.0.6              shinyjs_2.1.0            rsvd_1.0.5               ##  [70] digest_0.6.37            R6_2.5.1                 mime_0.12                ##  [73] textshaping_0.4.0        colorspace_2.1-1         listviewer_4.0.0         ##  [76] RSQLite_2.3.7            utf8_1.2.4               generics_0.1.3           ##  [79] hexbin_1.28.4            rtracklayer_1.65.0       httr_1.4.7               ##  [82] htmlwidgets_1.6.4        S4Arrays_1.5.10          pkgconfig_2.0.3          ##  [85] gtable_0.3.5             blob_1.2.4               ComplexHeatmap_2.21.1    ##  [88] XVector_0.45.0           htmltools_0.5.8.1        bookdown_0.40            ##  [91] ProtGenerics_1.37.1      rintrojs_0.3.4           clue_0.3-65              ##  [94] scales_1.3.0             alabaster.matrix_1.5.10  png_0.1-8                ##  [97] knitr_1.48               rjson_0.2.23             nlme_3.1-166             ## [100] curl_5.2.3               shinyAce_0.4.2           cachem_1.1.0             ## [103] rhdf5_2.49.0             GlobalOptions_0.1.2      BiocVersion_3.20.0       ## [106] parallel_4.4.1           miniUI_0.1.1.1           vipor_0.4.7              ## [109] AnnotationDbi_1.67.0     restfulr_0.0.15          desc_1.4.3               ## [112] pillar_1.9.0             grid_4.4.1               alabaster.schemas_1.5.0  ## [115] vctrs_0.6.5              promises_1.3.0           BiocSingular_1.21.4      ## [118] dbplyr_2.5.0             beachmat_2.21.6          xtable_1.8-4             ## [121] cluster_2.1.6            beeswarm_0.4.0           evaluate_1.0.0           ## [124] GenomicFeatures_1.57.1   cli_3.6.3                locfit_1.5-9.10          ## [127] compiler_4.4.1           Rsamtools_2.21.2         rlang_1.1.4              ## [130] crayon_1.5.3             ggbeeswarm_0.7.2         fs_1.6.4                 ## [133] viridisLite_0.4.2        alabaster.se_1.5.3       BiocParallel_1.39.0      ## [136] munsell_0.5.1            Biostrings_2.73.2        lazyeval_0.2.2           ## [139] colourpicker_1.3.0       Matrix_1.7-0             ExperimentHub_2.13.1     ## [142] bit64_4.5.2              Rhdf5lib_1.27.0          KEGGREST_1.45.1          ## [145] statmod_1.5.0            shiny_1.9.1              alabaster.ranges_1.5.2   ## [148] highr_0.11               AnnotationHub_3.13.3     fontawesome_0.5.2        ## [151] igraph_2.0.3             memoise_2.0.1            bslib_0.8.0              ## [154] bit_4.5.0"},{"path":[]},{"path":"https://isee.github.io/iSEEu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Rue-Albrecht. Author, maintainer. Charlotte Soneson. Author. Federico Marini. Author. Aaron Lun. Author. Michael Stadler. Contributor.","code":""},{"path":"https://isee.github.io/iSEEu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rue-Albrecht K, Soneson C, Marini F, Lun (2024). iSEEu: iSEE Universe. R package version 1.17.1, https://github.com/iSEE/iSEEu.","code":"@Manual{,   title = {iSEEu: iSEE Universe},   author = {Kevin Rue-Albrecht and Charlotte Soneson and Federico Marini and Aaron Lun},   year = {2024},   note = {R package version 1.17.1},   url = {https://github.com/iSEE/iSEEu}, }"},{"path":"https://isee.github.io/iSEEu/index.html","id":"iseeu","dir":"","previous_headings":"","what":"iSEE Universe","title":"iSEE Universe","text":"iSEEu package contains material code extends iSEE package (https://github.com/iSEE/iSEE). welcome contributions community, see instructions. example, Developer Day European Bioconductor 2019 conference (#EuroBioc2019, UCLouvain, Brussels, Belgium), proposed hackathon-like session, focused design “modes”, .e. preconfigured sets panels linked content used starting setup launching iSEE.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"iSEE Universe","text":"iSEEu can easily installed Bioconductor using BiocManager::install(): Optionally, want install development version GitHub, can use: Setting dependencies = TRUE ensure packages, including ones Suggests: field DESCRIPTION, installed - can essential want reproduce code vignette, example.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"iSEEu\") BiocManager::install(\"iSEE/iSEEu\", dependencies = TRUE) # or alternatively... remotes::install_github(\"iSEE/iSEEu\", dependencies = TRUE)"},{"path":"https://isee.github.io/iSEEu/index.html","id":"expanding-the-isee-universe-with-iseeu","dir":"","previous_headings":"","what":"Expanding the iSEE universe with iSEEu","title":"iSEE Universe","text":"install iSEE first - development version recommended. fork iSEEu repo (https://github.com/iSEE/iSEEu) clone locally. make desired changes files - start R folder, document via roxygen2 - push fork. contribution (function, panel, mode) done, consider adding information package. examples might screenshot mode action (placed folder inst/modes_img), well-documented example use case (maybe entry vignettes folder). Also add contributor (ctb) DESCRIPTION file. make pull request original repo - GitHub site offers practical framework , enabling comments, code reviews, goodies. documenting code guidelines: possible, please consider adding example dedicated Roxygen preamble show run function possible, consider adding one unit tests - use testthat framework","code":"BiocManager::install(\"iSEE\", version = \"devel\") # or remotes::install_github(\"iSEE/iSEE\") git clone https://github.com/[your_github_username]/iSEEu.git"},{"path":[]},{"path":"https://isee.github.io/iSEEu/index.html","id":"where-do-i-look-for-constants-within-isee","dir":"","previous_headings":"Some more info","what":"Where do I look for constants within iSEE?","title":"iSEE Universe","text":"Many “global” variables used several places iSEE defined constants.R script iSEE. suggest use constants rather hardcoding (e.g.) column names panel specification data frames, protect potential future changes precise column names. access constant, use iSEE:::.constantName.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"is-there-any-example-i-can-check-out-to-understand-how-things-are-supposed-to-work","dir":"","previous_headings":"Some more info","what":"Is there any example I can check out to understand how things are supposed to work?","title":"iSEE Universe","text":"several modes already defined R/ directory.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"are-there-any-style-guides-i-am-supposed-to-follow","dir":"","previous_headings":"Some more info","what":"Are there any style guides I am supposed to follow?","title":"iSEE Universe","text":"Yes. Mainly guided common sense “never changing working system”, please stick conventions adopting developing existing codebase. simple style options: keep indentation initial functions already available. writing text (e.g. vignette), please use one sentence per line - makes git diff operations easier check. code, use degree balance. names, try keep consistency already existing. use camelCase modes functions, prepend unexported elements dot.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"what-if-i-need-a-custom-panel-type","dir":"","previous_headings":"Some more info","what":"What if I need a custom panel type?","title":"iSEE Universe","text":"addition eight standard panel types, custom panels easily accommodated within iSEE applications. guide, see corresponding vignette. examples, see repo.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"are-there-other-examples-on-how-to-use-isee-for-exploring-other-datasetsdata-types","dir":"","previous_headings":"Some more info","what":"Are there other examples on how to use iSEE for exploring other datasets/data types?","title":"iSEE Universe","text":"Yes, can look examples https://github.com/iSEE/iSEE_instances, tried put together fully worked vignettes re-analyze publicly available datasets, e.g. also trying replicate key visualizations original publications.","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"where-can-i-find-a-comprehensive-introduction-to-isee","dir":"","previous_headings":"Some more info","what":"Where can I find a comprehensive introduction to iSEE?","title":"iSEE Universe","text":"iSEE package contains several vignettes detailing main functionality. can also take look workshop. compiled version Bioc2019 conference (based Bioconductor release 3.10) available .","code":""},{"path":"https://isee.github.io/iSEEu/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"iSEE Universe","text":"Please note iSEEu project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"The AggregatedDotPlot class — AggregatedDotPlot","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"Implements aggregated dot plot feature/group combination represented dot. color dot scales mean assay value across samples given group, size dot scales proportion non-zero values across samples group.","code":""},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"following slots control choice features: CustomRows, logical scalar indicating whether custom rows CustomRowsText used. TRUE, feature identities extracted CustomRowsText slot; otherwise defined transmitted row selection. Defaults TRUE. CustomRowsText, string containing names features interest, typically corresponding row names SummarizedExperiment. Names new-line separated within string. Defaults name first row SummarizedExperiment. following slots control specification groups: ColumnDataLabel, string specifying name colData field use group cells. chosen field correspond categorical factor. Defaults first categorical field. ColumnDataFacet, string specifying name colData field use faceting. chosen field correspond categorical factor. Defaults \"---\", .e., faceting. following slots control choice assay values: Assay, string specifying name assay containing continuous values, use calculating mean proportion non-zero values. Defaults first valid assay name. following slots control visualization parameters: VisualBoxOpen, logical scalar indicating whether visual parameter box open initialization. Defaults FALSE. VisualChoices, character vector specifying visualization options show. Defaults \"Color\" can also include \"Transform\" \"Legend\". following slots control transformation mean values: MeanNonZeroes, logical scalar indicating whether mean computed non-zero values. Defaults FALSE. Center, logical scalar indicating whether means feature centered across groups. Defaults FALSE. Scale, logical scalar indicating whether standard deviation feature across groups scaled unity. Defaults FALSE. following slots control color: UseCustomColormap, logical scalar indicating whether use custom color scale. Defaults FALSE, case application-wide color scale defined ExperimentColorMap used. CustomColorLow, string specifying low color (.e., average zero) custom scale. Defaults \"grey\". CustomColorHigh, string specifying high color custom scale. Defaults \"red\". CenteredColormap, string specifying divergent colormap use Center TRUE. Defaults \"blue < grey < orange\"; choices \"purple < black < yellow\", \"blue < grey < red\" \"green < grey < red\". addition, class inherits slots parent Panel class.","code":""},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"AggregatedDotPlot(...) creates instance AggregatedDotPlot class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"following code snippets, x instance AggregatedDotPlot class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x) adds \"AggregatedDotPlot\" entry containing continuous.assay.names discrete.colData.names. .refineParameters(x, se) returns x setting \"Assay\", \"ColumnDataLabel\" \"ColumnDataFacet\" valid values. continuous assays discrete colData variables available, NULL returned instead. defining interface: .defineInterface(x, se, select_info) creates interface modify various parameters slots, mostly calling parent method adding another visualization parameter box. .defineDataInterface(x, se, select_info) creates interface modify data-related parameters, .e., affect position points. .defineOutput(x) defines output HTML element. .panelColor(x) return specified default color panel class. .fullName(x) return \"Aggregated dot plot\". .hideInterface(x) return TRUE UI elements related multiple row selections. monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) create relevant observers UI elements. generating output: .generateOutput(x, se, all_memory, all_contents) return aggregated dot plot ggplot object, along commands used creation. .renderOutput(x, se, output, pObjects, rObjects) render aggregated dot plot onto interface. .exportOutput(x, se, all_memory, all_contents) save aggregated dot plot PDF file named x, returning path new file. providing documentation: .definePanelTour(x) return data.frame used rintrojs panel-specific tour.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/AggregatedDotPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The AggregatedDotPlot class — AggregatedDotPlot","text":"","code":"library(scRNAseq)  # Example data ---- sce <- ReprocessedAllenData(assays=\"tophat_counts\") class(sce) #> [1] \"SingleCellExperiment\" #> attr(,\"package\") #> [1] \"SingleCellExperiment\"  library(scater) #> Loading required package: scuttle #> Loading required package: ggplot2 sce <- logNormCounts(sce, exprs_values=\"tophat_counts\")  # launch the app itself ---- if (interactive()) {     iSEE(sce, initial=list(         AggregatedDotPlot(ColumnDataLabel=\"Primary.Type\")     )) }"},{"path":"https://isee.github.io/iSEEu/reference/DynamicMarkerTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic marker table — DynamicMarkerTable-class","title":"Dynamic marker table — DynamicMarkerTable-class","text":"table dynamically identifies marker genes selected subset samples. Comparisons made active selection transmitting panel () non-selected points, saved selections available; (ii) subset points saved selection.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicMarkerTable-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"Dynamic marker table — DynamicMarkerTable-class","text":"following slots control test procedure: LogFC, numeric scalar indicating log-fold change threshold test . Defaults zero. TestMethod, string indicating test use (based findMarkers function scran). can \"t\" (default), \"wilcox\" \"binom\". Assay, string indicating assay use testing. Defaults first named assay SummarizedExperiment. following slots control rendered table: ExtraFields, character vector containing names rowData columns included table. Set output getTableExtraFields. changed application starts. addition, class inherits slots parent RowTable, Table Panel classes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicMarkerTable-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"Dynamic marker table — DynamicMarkerTable-class","text":"DynamicMarkerTable(...) creates instance DynamicMarkerTable class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicMarkerTable-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"Dynamic marker table — DynamicMarkerTable-class","text":"following code snippets, x instance DynamicMarkerTable class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x) adds \"DynamicMarkerTable\" entry containing valid.assay.names valid.rowdata.names. also call equivalent RowTable method. .refineParameters(x, se) returns x setting \"Assay\" first valid value. also call equivalent RowTable method refinements x. valid assay names available, NULL returned instead. \"ExtraFields\" intersected valid rowData names. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .fullName(x) return \"Dynamic marker table\". .hideInterface(x) return TRUE UI elements related multiple row selections, otherwise calling method RowTable. monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via RowTable method. creating table: .generateTable(x, envir) create data.frame newly computed statistics envir. method return commands required . documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicMarkerTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic marker table — DynamicMarkerTable-class","text":"","code":"library(scRNAseq) library(scater)  sce <- ReprocessedAllenData(assays=\"tophat_counts\") sce <- logNormCounts(sce, exprs_values=\"tophat_counts\") sce <- runPCA(sce, ncomponents=4) sce <- runTSNE(sce)  dst <- DynamicMarkerTable(PanelId=1L, PanelWidth=8L,     ColumnSelectionSource=\"ReducedDimensionPlot1\")  rdp <- ReducedDimensionPlot(PanelId=1L,     ColorByFeatureSource=\"DynamicMarkerTable1\")  if (interactive()) {     iSEE(sce, initial=list(rdp, dst)) }"},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"dimensionality reduction plot dynamically recomputes coordinates samples, based selected subset samples (possibly features) transmitting panels. samples active saved multiple selections used .","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"following slots control thresholds used visualization: Type, string specifying type dimensionality reduction method use. can \"PCA\" (default), \"TSNE\" \"UMAP\", uses relevant functions scater package. NGenes, integer scalar specifying number highly variable genes use dimensionality reduction. used explicit selection features made app. Defaults 1000. Assay, string indicating assay use calculations. Defaults first named assay SummarizedExperiment. addition, class inherits slots parent ColumnDotPlot, DotPlot Panel classes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"DynamicReducedDimensionPlot(...) creates instance DynamicReducedDimensionPlot class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"following code snippets, x instance DynamicReducedDimensionPlot class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x) adds \"DynamicReducedDimensionPlot\" entry containing valid.assay.names. also call equivalent ColumnDotPlot method. .refineParameters(x, se) returns x setting \"Assay\" first valid value. also call equivalent ColumnDotPlot method refinements x. valid assay names available, NULL returned instead. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .fullName(x) return \"Dynamic reduced dimension plot\". monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via ColumnDotPlot method. creating plot: .generateDotPlotData(x, envir) create data.frame newly computed coordinates envir. method return commands required well list labels. handling multiple selections: .multiSelectionInvalidated(x) always return TRUE, change upstream selection points alter coordinates invalidate brush/lasso x. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour.","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/DynamicReducedDimensionPlot-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic reduced dimension plot — DynamicReducedDimensionPlot-class","text":"","code":"library(scRNAseq) library(scater)  sce <- ReprocessedAllenData(assays=\"tophat_counts\") sce <- logNormCounts(sce, exprs_values=\"tophat_counts\") sce <- runPCA(sce, ncomponents=4) sce <- runTSNE(sce)  drdp <- DynamicReducedDimensionPlot(PanelId=1L, Assay=\"logcounts\",     ColumnSelectionSource=\"ReducedDimensionPlot1\")  if (interactive()) {     iSEE(sce, initial=list(ReducedDimensionPlot(PanelId=1L), drdp)) }"},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature set table — FeatureSetTable-class","title":"Feature set table — FeatureSetTable-class","text":"table row feature set can clicked transmit multiple feature selection another panel. relies feature set collections registered input SummarizedExperiment, see registerFeatureSetCollections details. collections registered, default GO KEGG collections createGeneSetCommands.","code":""},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"Feature set table — FeatureSetTable-class","text":"following slots control feature sets use: Collection, string specifying type feature set collection show. Defaults first registered collection SummarizedExperiment. following slots control table selections: Selected, string containing name currently selected gene set. Defaults \"\", .e., selection. Search, string containing regular expression global search. Defaults \"\", .e., search. SearchColumns, character vector entry contains search string column. Defaults empty character vector, .e., search. addition, class inherits slots parent Panel class.","code":""},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"Feature set table — FeatureSetTable-class","text":"FeatureSetTable(...) creates instance FeatureSetTable class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"Feature set table — FeatureSetTable-class","text":"following code snippets, x instance FeatureSetTable class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x) adds \"FeatureSetTable\" entry containing available.sets, named list DataFrames containing information individual gene sets collection. also call equivalent Panel method. .refineParameters(x, se) replaces NA values Collection first valid collection. also replaces NA values Selected first valid set chosen collection. also call equivalent Panel method. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .fullName(x) return \"Gene set table\". .hideInterface(x) return TRUE UI elements related multiple selections, otherwise calling method Panel. .defineOutput(x) return HTML element containing datatable widget. monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via Panel method. creating table: .generateOutput(x, envir) create data.frame gene set descriptions envir. also return commands required name variable corresponding said data.frame. .renderOutput(x, se, ..., output, pObjects, rObjects) add datatable widget output, used render aforementioned data.frame. controlling multiple selections: .multiSelectionDimension(x) returns \"row\". .multiSelectionCommands(x, index) returns string specifying commands used extract identities genes currently selected set. index ignored. .multiSelectionActive(x) returns name currently selected gene set, unless selection made, case NULL returned. .multiSelectionClear(x) returns x Selected slot replaced empty string. .multiSelectionAvailable(x, contents) returns contents$available, set number features se. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour.","code":""},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Feature set table — FeatureSetTable-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/FeatureSetTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature set table — FeatureSetTable-class","text":"","code":"library(scRNAseq) sce <- LunSpikeInData(location=FALSE)  library(scater) sce <- logNormCounts(sce)  library(scran) rowData(sce) <- cbind(rowData(sce), modelGeneVarWithSpikes(sce, \"ERCC\"))  cmds <- createGeneSetCommands(collections=\"GO\",     organism=\"org.Mm.eg.db\", identifier=\"ENSEMBL\") sce <- registerFeatureSetCommands(sce, cmds)  # Setting up the application. gst <- FeatureSetTable(PanelId=1L)  rdp <- RowDataPlot(RowSelectionSource=\"FeatureSetTable1\",     ColorBy=\"Row selection\",     XAxis=\"Row data\", XAxisRowData=\"mean\", YAxis=\"total\")  rdt <- RowDataTable(RowSelectionSource=\"FeatureSetTable1\")  if (interactive()) {     iSEE(sce, initial=list(gst, rdp, rdt)) }"},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set table — GeneSetTable-class","title":"Gene set table — GeneSetTable-class","text":"table row gene set can clicked transmit multiple feature selection another panel. deprecated favor simpler FeatureSetTable.","code":""},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"Gene set table — GeneSetTable-class","text":"following slots control type gene sets show: Type, string specifying type gene set collection show. Defaults \"GO\". following slots control table selections: Selected, string containing name currently selected gene set. Defaults \"\", .e., selection. Search, string containing regular expression global search. Defaults \"\", .e., search. SearchColumns, character vector entry contains search string column. Defaults empty character vector, .e., search. addition, class inherits slots parent Panel class.","code":""},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"Gene set table — GeneSetTable-class","text":"GeneSetTable(...) creates instance GeneSetTable class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"Gene set table — GeneSetTable-class","text":"following code snippets, x instance GeneSetTable class. Refer documentation method details remaining arguments. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .fullName(x) return \"Gene set table\". .hideInterface(x) return TRUE UI elements related multiple selections, otherwise calling method Panel. .defineOutput(x) return HTML element containing datatable widget. monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via Panel method. creating table: .generateOutput(x, envir) create data.frame gene set descriptions envir, based mode=\"show\" output .getGeneSetCommands. also return commands required name variable corresponding said data.frame. .renderOutput(x, se, ..., output, pObjects, rObjects) add datatable widget output, used render aforementioned data.frame. controlling multiple selections: .multiSelectionDimension(x) returns \"row\". .multiSelectionCommands(x, index) returns string specifying commands used extract identities genes currently selected set, based mode=\"extract\" output .getGeneSetCommands. index ignored. .multiSelectionActive(x) returns name currently selected gene set, unless selection made, case NULL returned. .multiSelectionClear(x) returns x Selected slot replaced empty string. .multiSelectionAvailable(x, contents) returns contents$available, set number features se.","code":""},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gene set table — GeneSetTable-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/GeneSetTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene set table — GeneSetTable-class","text":"","code":"library(scRNAseq) sce <- LunSpikeInData(location=FALSE)  library(scater) sce <- logNormCounts(sce)  library(scran) rowData(sce) <- cbind(rowData(sce), modelGeneVarWithSpikes(sce, \"ERCC\"))  # This defaults to 'org.Hs.eg.db' with 'ENTREZID'. .setOrganism(\"org.Mm.eg.db\") #> Warning: '.setOrganism' is deprecated. #> Use 'setFeatureSetCommands' instead. #> See help(\"Deprecated\") .setIdentifierType(\"ENSEMBL\") #> Warning: '.setIdentifierType' is deprecated. #> Use 'setFeatureSetCommands' instead. #> See help(\"Deprecated\") gst <- GeneSetTable(PanelId=1L) #> Warning: 'GeneSetTable' is deprecated. #> Use 'FeatureSetTable' instead. #> See help(\"Deprecated\")  rdp <- RowDataPlot(RowSelectionSource=\"GeneSetTable1\",     ColorBy=\"Row selection\",     XAxis=\"Row data\", XAxisRowData=\"mean\", YAxis=\"total\")  rdt <- RowDataTable(RowSelectionSource=\"GeneSetTable1\")  if (interactive()) {     iSEE(sce, initial=list(gst, rdp, rdt)) }"},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"LogFCLogFCPlot RowDataPlot subclass dedicated creating scatter plot two log-fold changes. axis contains log-fold change differential expression analysis point represents feature.","code":""},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"following slots control thresholds used visualization: XPValueField, string specifying field rowData containing p-values x-axis comparison. YPValueField, string specifying field rowData containing p-values y-axis comparison. PValueThreshold, numeric scalar (0, 1] specifying threshold use (adjusted) p-value. Defaults 0.05. LogFCThreshold, non-negative numeric scalar specifying threshold use log-fold change. Defaults 0. PValueCorrection, string specifying multiple testing correction apply. Defaults \"BH\", can take value p.adjust.methods. addition, class inherits slots parent RowDataPlot, RowDotPlot, DotPlot Panel classes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"LogFCLogFCPlot(...) creates instance LogFCLogFCPlot class, slot value can passed ... named argument. Users expected load relevant statistics rowData SummarizedExperiment. two columns p-values comparison - another two corresponding log-fold changes - gene/row, see Examples. expected column names (tune ) listed ?\"registerPValueFields\".","code":""},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"following code snippets, x instance RowDataPlot class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x, se) returns se loaded class-specific constants. includes \"valid.p.fields\" \"valid.lfc.fields\", character vectors containing names valid rowData columns p-values log-fold changes, respectively. .refineParameters(x, se) returns x setting XAxis=\"Row data\" well \"PValuePattern\" \"LogFCPattern\" corresponding cached values. also call equivalent RowDataPlot method refinements x. valid p-value log-fold change fields available, NULL returned instead. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .allowableXAxisChoices(x, se) returns character vector specifying acceptable log-fold change-related variables rowData(se) can used choices x-axis. .allowableYAxisChoices(x, se) returns character vector specifying acceptable log-fold change-related variables rowData(se) can used choices y-axis. .hideInterface(x, field) return TRUE field=\"XAxis\", otherwise call RowDataPlot method. .fullName(x) return \"LogFC-logFC plot\". monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via RowDataPlot method. creating plot: .generateDotPlotData(x, envir) create data.frame row metadata variables envir. contains two sets log-fold changes axes, plus extra field specifying whether feature considered significantly . method return commands required well list labels. .prioritizeDotPlotData(x, envir) create variables envir marking priority points. Significant features receive higher priority (.e., plotted non-significant counterparts) less aggressively downsampled Downsample=TRUE. method return commands required well logical scalar indicating rescaling downsampling resolution performed. .colorByNoneDotPlotField(x) return string specifying field data.frame (generated .generateDotPlotData) containing significance information. used coloring ColorBy=\"None\". .colorByNoneDotPlotScale(x) return string containing ggplot2 command add default color scale ColorBy=\"None\". .generateDotPlot(x, labels, envir) returns list containing plot commands, using inital ColumnDataPlot ggplot adding horizontal lines demarcating log-fold change threshold. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour. .getDotPlotColorHelp(x, color_choices) returns function generates rintrojs tour color choice UI.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/LogFCLogFCPlot-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The LogFCLogFCPlot class — LogFCLogFCPlot-class","text":"","code":"# Making up some results: se <- SummarizedExperiment(matrix(rnorm(10000), 1000, 10)) rownames(se) <- paste0(\"GENE_\", seq_len(nrow(se))) rowData(se)$PValue1 <- runif(nrow(se)) rowData(se)$LogFC1 <- rnorm(nrow(se)) rowData(se)$PValue2 <- runif(nrow(se)) rowData(se)$LogFC2 <- rnorm(nrow(se))  if (interactive()) {     iSEE(se, initial=list(LogFCLogFCPlot(XAxisRowData=\"LogFC1\", YAxis=\"LogFC2\",         XPValueField=\"PValue1\", YPValueField=\"PValue2\"))) }"},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The MAPlot class — MAPlot-class","title":"The MAPlot class — MAPlot-class","text":"MAPlot RowDataPlot subclass dedicated creating MA plot. retrieves log-fold change average abundance creates row-based plot point represents feature.","code":""},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"The MAPlot class — MAPlot-class","text":"following slots control thresholds used visualization: PValueField, string specifying field rowData containing p-values. PValueThreshold, numeric scalar (0, 1] specifying threshold use (adjusted) p-value. Defaults 0.05. LogFCThreshold, non-negative numeric scalar specifying threshold use log-fold change. Defaults 0. PValueCorrection, string specifying multiple testing correction apply. Defaults \"BH\", can take value p.adjust.methods. addition, class inherits slots parent RowDataPlot, RowDotPlot, DotPlot Panel classes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"The MAPlot class — MAPlot-class","text":"MAPlot(...) creates instance MAPlot class, slot value can passed ... named argument. Users expected load relevant statistics rowData SummarizedExperiment. panel expects one columns containing p-values, log-fold changes average abundances gene/row - see Examples. expected column names (tune ) listed ?\"registerPValueFields\".","code":""},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"The MAPlot class — MAPlot-class","text":"following code snippets, x instance RowDataPlot class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x, se) returns se loaded class-specific constants. includes \"valid.p.fields\", \"valid.ab.fields\" \"valid.lfc.fields\", character vectors containing names valid rowData columns p-values, average abundances log-fold changes, respectively. .refineParameters(x, se) returns x setting XAxis=\"Row data\" various *Pattern fields cached values. also call equivalent RowDataPlot method refinements x. valid p-value, abundance log-fold change fields available, NULL returned instead. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .allowableXAxisChoices(x, se) returns character vector specifying acceptable average abundance-related variables rowData(se) can used choices x-axis. .allowableYAxisChoices(x, se) returns character vector specifying acceptable log-fold change-related variables rowData(se) can used choices y-axis. .hideInterface(x, field) return TRUE field=\"XAxis\", otherwise call RowDataPlot method. .fullName(x) return \"MA plot\". monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via RowDataPlot method. creating plot: .generateDotPlotData(x, envir) create data.frame row metadata variables envir. contain average abundances x-axis log-fold changes y-axis, addition extra field specifying whether feature considered significantly . method return commands required well list labels. .prioritizeDotPlotData(x, envir) create variables envir marking priority points. Significant features receive higher priority (.e., plotted non-significant counterparts) less aggressively downsampled Downsample=TRUE. method return commands required well logical scalar indicating rescaling downsampling resolution performed. .colorByNoneDotPlotField(x) return string specifying field data.frame (generated .generateDotPlotData) containing significance information. used coloring ColorBy=\"None\". .colorByNoneDotPlotScale(x) return string containing ggplot2 command add default color scale ColorBy=\"None\". .generateDotPlot(x, labels, envir) returns list containing plot commands, using inital ColumnDataPlot ggplot adding horizontal lines demarcating log-fold change threshold. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour. .getDotPlotColorHelp(x, color_choices) returns function generates rintrojs tour color choice UI.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The MAPlot class — MAPlot-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/MAPlot-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The MAPlot class — MAPlot-class","text":"","code":"# Making up some results: se <- SummarizedExperiment(matrix(rnorm(10000), 1000, 10)) rownames(se) <- paste0(\"GENE_\", seq_len(nrow(se))) rowData(se)$PValue <- runif(nrow(se)) rowData(se)$LogFC <- rnorm(nrow(se)) rowData(se)$AveExpr <- rnorm(nrow(se))  if (interactive()) {     iSEE(se, initial=list(MAPlot())) }"},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The MarkdownBoard class — MarkdownBoard-class","title":"The MarkdownBoard class — MarkdownBoard-class","text":"MarkdownBoard class renders user-supplied Markdown HTML display inside app. useful displaying information alongside panels, users jot notes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"The MarkdownBoard class — MarkdownBoard-class","text":"following slots relevant rendered content: Content, string containing Markdown-formatted text. rendered HTML display inside app. addition, class inherits slots parent Panel class.","code":""},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"The MarkdownBoard class — MarkdownBoard-class","text":"MarkdownBoard(...) creates instance MarkdownBoard class, slot value can passed ... named argument.","code":""},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"The MarkdownBoard class — MarkdownBoard-class","text":"following code snippets, x instance RowDataPlot class. Refer documentation method details remaining arguments. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements editing Content. .panelColor(x) return specified default color panel class. .hideInterface(x, field) return TRUE selection-related parameters. .fullName(x) return \"Volcano plot\". monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via RowDataPlot method. rendering display: .defineOutput(x) return UI element display HTML. .renderOutput(x, se, ..., output, pObjects, rObjects) add reactive expressions render HTML. .generateOutput(x, se, all_memory, all_contents) render Markdown HTML via rmarkdown package, returning string containing rendered content text element output list. Markdown-formatted content converted R comment code tracking purposes. .exportOutput(x, se, all_memory, all_contents) create HTML containing rendered Markdown, return string containing path HTML. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour. great deal say .","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The MarkdownBoard class — MarkdownBoard-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/MarkdownBoard-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The MarkdownBoard class — MarkdownBoard-class","text":"","code":"if (interactive()) {     iSEE(SummarizedExperiment(), initial=list(MarkdownBoard())) }"},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The VolcanoPlot class — VolcanoPlot-class","title":"The VolcanoPlot class — VolcanoPlot-class","text":"VolcanoPlot RowDataPlot subclass dedicated creating volcano plot. retrieves log-fold change p-value creates row-based plot point represents feature.","code":""},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":"slot-overview","dir":"Reference","previous_headings":"","what":"Slot overview","title":"The VolcanoPlot class — VolcanoPlot-class","text":"following slots control thresholds used visualization: PValueThreshold, numeric scalar (0, 1] specifying threshold use (adjusted) p-value. Defaults 0.05. LogFCThreshold, non-negative numeric scalar specifying threshold use log-fold change. Defaults 0. PValueCorrection, string specifying multiple testing correction apply. Defaults \"BH\", can take value p.adjust.methods. addition, class inherits slots parent RowDataPlot, RowDotPlot, DotPlot Panel classes.","code":""},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"The VolcanoPlot class — VolcanoPlot-class","text":"VolcanoPlot(...) creates instance VolcanoPlot class, slot value can passed ... named argument. Users expected load relevant statistics rowData SummarizedExperiment. panel expects one columns containing p-values log-fold changes gene/row - see Examples. expected column names (tune ) listed ?\"registerPValueFields\".","code":""},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":"supported-methods","dir":"Reference","previous_headings":"","what":"Supported methods","title":"The VolcanoPlot class — VolcanoPlot-class","text":"following code snippets, x instance RowDataPlot class. Refer documentation method details remaining arguments. setting data values: .cacheCommonInfo(x, se) returns se loaded class-specific constants. includes \"valid.p.fields\" \"valid.lfc.fields\", character vectors containing names valid rowData columns p-values log-fold changes, respectively. .refineParameters(x, se) returns x setting XAxis=\"Row data\" various *Pattern fields cached values. also call equivalent RowDataPlot method refinements x. valid p-value log-fold change fields available, NULL returned instead. defining interface: .defineDataInterface(x, se, select_info) returns list interface elements manipulating slots described . .panelColor(x) return specified default color panel class. .allowableXAxisChoices(x, se) returns character vector specifying acceptable log-fold change-related variables rowData(se) can used choices x-axis. .allowableYAxisChoices(x, se) returns character vector specifying acceptable p-value-related variables rowData(se) can used choices y-axis. .hideInterface(x, field) return TRUE field=\"XAxis\", otherwise call RowDataPlot method. .fullName(x) return \"Volcano plot\". monitoring reactive expressions: .createObservers(x, se, input, session, pObjects, rObjects) sets observers new slots described , well parent classes via RowDataPlot method. creating plot: .generateDotPlotData(x, envir) create data.frame row metadata variables envir. contain negative log-transformed p-values y-axis log-fold changes x-axis, addition extra field specifying whether feature considered significantly . method return commands required well list labels. .prioritizeDotPlotData(x, envir) create variables envir marking priority points. Significant features receive higher priority (.e., plotted non-significant counterparts) less aggressively downsampled Downsample=TRUE. method return commands required well logical scalar indicating rescaling downsampling resolution performed. .colorByNoneDotPlotField(x) return string specifying field data.frame (generated .generateDotPlotData) containing significance information. used coloring ColorBy=\"None\". .colorByNoneDotPlotScale(x) return string containing ggplot2 command add default color scale ColorBy=\"None\". .generateDotPlot(x, labels, envir) returns list containing plot commands, using inital ColumnDataPlot ggplot adding vertical lines demarcating log-fold change threshold. documentation: .definePanelTour(x) returns data.frame containing steps panel-specific tour. .getDotPlotColorHelp(x, color_choices) returns function generates rintrojs tour color choice UI.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The VolcanoPlot class — VolcanoPlot-class","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/VolcanoPlot-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The VolcanoPlot class — VolcanoPlot-class","text":"","code":"# Making up some results: se <- SummarizedExperiment(matrix(rnorm(10000), 1000, 10)) rownames(se) <- paste0(\"GENE_\", seq_len(nrow(se))) rowData(se)$PValue <- runif(nrow(se)) rowData(se)$LogFC <- rnorm(nrow(se)) rowData(se)$AveExpr <- rnorm(nrow(se))  if (interactive()) {     iSEE(se, initial=list(VolcanoPlot())) }"},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gene set commands — createGeneSetCommands","title":"Create gene set commands — createGeneSetCommands","text":"Create commands required populate FeatureSetTables commonly used gene sets.","code":""},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gene set commands — createGeneSetCommands","text":"","code":"createGeneSetCommands(   collections = c(\"GO\", \"KEGG\"),   organism = \"org.Hs.eg.db\",   identifier = \"ENTREZID\" )"},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gene set commands — createGeneSetCommands","text":"collections Character vectors specifying gene set collections interest. organism String containing org.*.eg.db package use extract mappings gene sets gene IDs. identifier String specifying identifier use extract IDs organism package.","code":""},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gene set commands — createGeneSetCommands","text":"list two character vectors describing create collections retrieve gene sets. follows expectations commands registerFeatureSetCommands.","code":""},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create gene set commands — createGeneSetCommands","text":"GO terms extracted using \"GOALL\" mode, extracts direct indirect children term. description GO term extracted using GO.db package. Mappings genes KEGG pathway extracted organism package using \"PATH\" term. Unfortunately, date due licensing around KEGG terms. Descriptions pathway extracted http://rest.kegg.jp/list/pathway. output function can used commands argument registerFeatureSetCommands. also used default FeatureSetTable constructor collections registered.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create gene set commands — createGeneSetCommands","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/createGeneSetCommands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create gene set commands — createGeneSetCommands","text":"","code":"out <- createGeneSetCommands() cat(out$collections['GO'], \"\\n\") #> .all_terms <- AnnotationDbi::keys(org.Hs.eg.db::org.Hs.eg.db, keytype='GOALL'); #> tab <- AnnotationDbi::select(GO.db::GO.db, keys=.all_terms, columns='TERM'); #> rownames(tab) <- tab$GOID; #> tab$GOID <- NULL;  cat(out$sets['GO'], \"\\n\") #> .genes_in_set <- tryCatch(AnnotationDbi::select(org.Hs.eg.db::org.Hs.eg.db, keys=.set_id, keytype='GOALL', #>    column=\"ENTREZID\")[,\"ENTREZID\"], error=function(e) character(0)); #> selected <- intersect(rownames(se), .genes_in_set)"},{"path":"https://isee.github.io/iSEEu/reference/defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions — defunct","title":"Defunct functions — defunct","text":"Pretty much says . functions defunct used.","code":""},{"path":"https://isee.github.io/iSEEu/reference/defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct functions — defunct","text":"","code":".getAcceptablePValueFields(...)  .getAcceptableAveAbFields(...)  .getAcceptableLogFCFields(...)  .setAcceptablePValueFields(...)  .setAcceptableAveAbFields(...)  .setAcceptableLogFCFields(...)"},{"path":"https://isee.github.io/iSEEu/reference/defunct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defunct functions — defunct","text":"... Ignored.","code":""},{"path":"https://isee.github.io/iSEEu/reference/defunct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defunct functions — defunct","text":"functions error defunct message pointing towards replacement (available).","code":""},{"path":"https://isee.github.io/iSEEu/reference/defunct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Defunct functions — defunct","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":null,"dir":"Reference","previous_headings":"","what":"Global feature set commands — setFeatureSetCommands","title":"Global feature set commands — setFeatureSetCommands","text":"Set commands define global collection feature sets. deprecated favor registerFeatureSetCommands.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global feature set commands — setFeatureSetCommands","text":"","code":"setFeatureSetCommands(value)"},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global feature set commands — setFeatureSetCommands","text":"value list two character vectors named \"collections\" \"sets\". vectors length names. Vectors contain R commands create collections retrieve sets; see ?FeatureSetTable output createGeneSetCommands details.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global feature set commands — setFeatureSetCommands","text":"setFeatureSetCommands set current global feature set commands return NULL invisibly.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Global feature set commands — setFeatureSetCommands","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-FeatureSetCommands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global feature set commands — setFeatureSetCommands","text":"","code":"old <- getFeatureSetCommands()  new.cmds <- createGeneSetCommands(organism=\"org.Mm.eg.db\",     identifier=\"SYMBOL\") setFeatureSetCommands(new.cmds)  getFeatureSetCommands() #> $collections #>                                                                                                                                                                                                                                                                        GO  #>                                                            \".all_terms <- AnnotationDbi::keys(org.Mm.eg.db::org.Mm.eg.db, keytype='GOALL');\\ntab <- AnnotationDbi::select(GO.db::GO.db, keys=.all_terms, columns='TERM');\\nrownames(tab) <- tab$GOID;\\ntab$GOID <- NULL;\"  #>                                                                                                                                                                                                                                                                      KEGG  #> \".all_terms <- AnnotationDbi::keys(org.Mm.eg.db::org.Mm.eg.db, keytype='PATH');\\ntab <- KEGGREST::keggList('pathway');\\ntab <- data.frame(ID=names(tab), Description=tab);\\nrownames(tab) <- sub('map', '', tab$ID);\\ntab <- tab[intersect(rownames(tab), .all_terms),];\"  #>  #> $sets #>                                                                                                                                                                                                                                     GO  #> \".genes_in_set <- tryCatch(AnnotationDbi::select(org.Mm.eg.db::org.Mm.eg.db, keys=.set_id, keytype='GOALL',\\n   column=\\\"SYMBOL\\\")[,\\\"SYMBOL\\\"], error=function(e) character(0));\\nselected <- intersect(rownames(se), .genes_in_set)\"  #>                                                                                                                                                                                                                                   KEGG  #>  \".genes_in_set <- tryCatch(AnnotationDbi::select(org.Mm.eg.db::org.Mm.eg.db, keys=.set_id, keytype='PATH',\\n   column=\\\"SYMBOL\\\")[,\\\"SYMBOL\\\"], error=function(e) character(0));\\nselected <- intersect(rownames(se), .genes_in_set)\"  #>   setFeatureSetCommands(old)"},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Global extra table fields — getTableExtraFields","title":"Global extra table fields — getTableExtraFields","text":"Get set names extra fields include table.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global extra table fields — getTableExtraFields","text":"","code":"getTableExtraFields()  setTableExtraFields(value)"},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global extra table fields — getTableExtraFields","text":"value character vector containing names extra fields include.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global extra table fields — getTableExtraFields","text":"getTableExtraFields returns current global extra table fields. setTableExtraFields set current global extra table fields return NULL invisibly.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global extra table fields — getTableExtraFields","text":"utilities allow users easily set feature set commands DynamicMarkerTables . global settings take effect () setup iSEE application (ii) first DynamicMarkerTable existing values \"TableExtraFields\" slots.","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Global extra table fields — getTableExtraFields","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/global-TableExtraFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global extra table fields — getTableExtraFields","text":"","code":"old <- getTableExtraFields()  setTableExtraFields(LETTERS) getTableExtraFields() #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" #> [20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"  setTableExtraFields(old)"},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Global DE prefixes — getPValuePattern","title":"Global DE prefixes — getPValuePattern","text":"Get set patterns acceptable names rowData columns related differential expression analysis. functions deprecated; use counterparts ?\"registerPValuePatterns\" instead.","code":""},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global DE prefixes — getPValuePattern","text":"","code":"getPValuePattern()  getLogFCPattern()  getAveAbPattern()  setPValuePattern(value)  setLogFCPattern(value)  setAveAbPattern(value)"},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global DE prefixes — getPValuePattern","text":"value character vector containing acceptable prefixes statistic.","code":""},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global DE prefixes — getPValuePattern","text":"getPValuePattern returns patterns acceptable column names p-values. getLogFCPattern returns patterns acceptable column names log-fold changes. getAveAbPattern returns patterns acceptable column names average abundances. corresponding setters set global parts statistic return NULL invisibly.","code":""},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global DE prefixes — getPValuePattern","text":"utilities allow users easily get set patterns acceptable fields VolcanoPlots, MAPlots LogFCLogFCPlots . global settings take effect () setup iSEE application (ii) first panel class existing values \"PValueFields\", \"LogFCFields\" \"AveAbFields\" slots (take precedence present). global settings treated patterns partial matching. \"PValue\" pattern, columns names \"PValue.X\" \"X.PValue\" considered acceptable matches. partial matching must exact - regular expressions supported.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Global DE prefixes — getPValuePattern","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/globals-PValuePattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global DE prefixes — getPValuePattern","text":"","code":"old <- getPValuePattern()  setPValuePattern(LETTERS) #> Warning: 'setPValuePattern' is deprecated. #> Use 'registerPValuePatterns' instead. #> See help(\"Deprecated\") getPValuePattern() #>  [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" #> [20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"  setPValuePattern(old) #> Warning: 'setPValuePattern' is deprecated. #> Use 'registerPValuePatterns' instead. #> See help(\"Deprecated\")"},{"path":"https://isee.github.io/iSEEu/reference/iSEEu-pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"iSEEu: iSEE Universe — iSEEu-pkg","title":"iSEEu: iSEE Universe — iSEEu-pkg","text":"iSEEu package provides modes panels iSEE, allowing easy configuration iSEE applications.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/iSEEu-pkg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"iSEEu: iSEE Universe — iSEEu-pkg","text":"Charlotte Soneson charlottesoneson@gmail.com Federico Marini marinif@uni-mainz.de Kevin Rue-Albrecht kevin.rue-albrecht@kennedy.ox.ac.uk Aaron Lun infinite.monkeys..keyboards@gmail.com","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"App pre-configured to launch with no visible panel — modeEmpty","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"mode launches app display panel.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"","code":"modeEmpty(...)"},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"... Arguments passed iSEE().","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"Shiny app object returned.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"mode presents advantage launch interface minimal amount time, need render panel interface launched. Users can use \"Organize panels\" widget select panels display interface.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeEmpty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"App pre-configured to launch with no visible panel — modeEmpty","text":"","code":"example(\"SingleCellExperiment\") #>  #> SnglCE> ncells <- 100 #>  #> SnglCE> u <- matrix(rpois(20000, 5), ncol=ncells) #>  #> SnglCE> v <- log2(u + 1) #>  #> SnglCE> pca <- matrix(runif(ncells*5), ncells) #>  #> SnglCE> tsne <- matrix(rnorm(ncells*2), ncells) #>  #> SnglCE> sce <- SingleCellExperiment(assays=list(counts=u, logcounts=v), #> SnglCE+     reducedDims=SimpleList(PCA=pca, tSNE=tsne)) #>  #> SnglCE> sce #> class: SingleCellExperiment  #> dim: 200 100  #> metadata(0): #> assays(2): counts logcounts #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> reducedDimNames(2): PCA tSNE #> mainExpName: NULL #> altExpNames(0): #>  #> SnglCE> ## coercion from SummarizedExperiment #> SnglCE> se <- SummarizedExperiment(assays=list(counts=u, logcounts=v)) #>  #> SnglCE> as(se, \"SingleCellExperiment\") #> class: SingleCellExperiment  #> dim: 200 100  #> metadata(0): #> assays(2): counts logcounts #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #>  #> SnglCE> ## coercion from RangedSummarizedExperiment #> SnglCE> rse <- as(se, \"RangedSummarizedExperiment\") #>  #> SnglCE> as(rse, \"SingleCellExperiment\") #> class: SingleCellExperiment  #> dim: 200 100  #> metadata(0): #> assays(2): counts logcounts #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #>  #> SnglCE> # coercion to a RangedSummarizedExperiment #> SnglCE> as(sce, \"RangedSummarizedExperiment\") #> class: RangedSummarizedExperiment  #> dim: 200 100  #> metadata(0): #> assays(2): counts logcounts #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #>  #> SnglCE> # coercion to a SummarizedExperiment is slightly buggy right now #> SnglCE> # and requires a little workaround: #> SnglCE> as(as(sce, \"RangedSummarizedExperiment\"), \"SummarizedExperiment\") #> class: SummarizedExperiment  #> dim: 200 100  #> metadata(0): #> assays(2): counts logcounts #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): rownames(sce) <- paste0(\"G\", 1:200) colnames(sce) <- paste0(\"C\", 1:100)  app <- modeEmpty(sce) if (interactive()) {   shiny::runApp(app, port=1234) }"},{"path":"https://isee.github.io/iSEEu/reference/modeGating.html","id":null,"dir":"Reference","previous_headings":"","what":"App pre-configured to link multiple feature assay plots — modeGating","title":"App pre-configured to link multiple feature assay plots — modeGating","text":"mode launches Shiny App preconfigured multiple chain-linked feature expression plots interactive data exploration SingleCellExperiment SummarizedExperiment object.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeGating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App pre-configured to link multiple feature assay plots — modeGating","text":"","code":"modeGating(se, features, plotAssay = NA_character_, ..., plotWidth = 4)"},{"path":"https://isee.github.io/iSEEu/reference/modeGating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App pre-configured to link multiple feature assay plots — modeGating","text":"se object coercible SingleCellExperiment-class features data.frame columns named x y define features axes linked plots. Plots serially linked first row last. plotAssay assay (one assayNames(se)) use plots (character vector length either 1 equal nrow(features)). ... Additional arguments passed iSEE(). plotWidth grid width linked plots (numeric vector length either 1 equal nrow(features)","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeGating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App pre-configured to link multiple feature assay plots — modeGating","text":"Shiny app object returned.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeGating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"App pre-configured to link multiple feature assay plots — modeGating","text":"","code":"library(scRNAseq)  # Example data ---- sce <- ReprocessedAllenData(assays=\"tophat_counts\") class(sce) #> [1] \"SingleCellExperiment\" #> attr(,\"package\") #> [1] \"SingleCellExperiment\"  library(scater) sce <- logNormCounts(sce, exprs_values=\"tophat_counts\")  # Select top variable genes ----  plot_count <- 6 rv <- rowVars(assay(sce, \"tophat_counts\")) top_var <- head(order(rv, decreasing=TRUE), plot_count*2) top_var_genes <- rownames(sce)[top_var]  plot_features <- data.frame(     x=head(top_var_genes, plot_count),     y=tail(top_var_genes, plot_count),     stringsAsFactors=FALSE  )  # launch the app itself ----  app <- modeGating(sce, features = plot_features) if (interactive()) {   shiny::runApp(app, port=1234) }"},{"path":"https://isee.github.io/iSEEu/reference/modeReducedDim.html","id":null,"dir":"Reference","previous_headings":"","what":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","title":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","text":"mode launches Shiny App preconfigured multiple linked reduced dimension plots interactive data exploration SingleCellExperiment object.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeReducedDim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","text":"","code":"modeReducedDim(   se,   includeNames = reducedDimNames(se),   colorBy = NULL,   ...,   plotWidth = NULL )"},{"path":"https://isee.github.io/iSEEu/reference/modeReducedDim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","text":"se object coercible SingleCellExperiment includeNames Character vector names reduced dimensions display individual panels. default uses available reducedDimNames(se). colorBy Character scalar controlling coloring cells. Must match either one colnames(colData(se)) rownames(se). coloring colData column, column data plot opened addition reduced dimension panels. coloring feature, row statistics table openend addition reduced dimension panels, latter receiving color. ... Additional arguments passed iSEE. plotWidth grid width linked plots (numeric vector length either 1 equal length(includeNames)). total width window 12, plotWidth = 4 example show three panels per row. plotWidth = NULL (default), value estimated depending number reduced dimension panels.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeReducedDim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","text":"Shiny app object returned.","code":""},{"path":"https://isee.github.io/iSEEu/reference/modeReducedDim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"App pre-configured to compare multiple reduced dimension plots — modeReducedDim","text":"","code":"library(scRNAseq)  # Example data ---- sce <- ReprocessedAllenData(assays=\"tophat_counts\") class(sce) #> [1] \"SingleCellExperiment\" #> attr(,\"package\") #> [1] \"SingleCellExperiment\"  library(scater) sce <- logNormCounts(sce, exprs_values=\"tophat_counts\") sce <- runPCA(sce, ncomponents = 30) sce <- runTSNE(sce) sce <- runUMAP(sce) reducedDimNames(sce) #> [1] \"PCA\"  \"TSNE\" \"UMAP\"  # launch the app ---- # ... coloring by a column data variable app <- modeReducedDim(sce, colorBy = \"Primary.Type\") if (interactive()) {     shiny::runApp(app, port=1234) } # ... coloring by a feature app <- modeReducedDim(sce, colorBy = \"Scnn1a\") if (interactive()) {     shiny::runApp(app, port=1234) }"},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Register DE-related fields — registerDEFields","title":"Register DE-related fields — registerDEFields","text":"Register names fields containing various DE statistics, populate user interface DE-related Panels.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register DE-related fields — registerDEFields","text":"","code":"registerPValueFields(se, fields)  registerAveAbFields(se, fields)  registerLogFCFields(se, fields)  registerPValuePatterns(se, patterns)  registerAveAbPatterns(se, patterns)  registerLogFCPatterns(se, patterns)  getPValueFields(se)  getAveAbFields(se)  getLogFCFields(se)  getPValuePatterns(se, defaults = c(\"PValue\", \"p.value\", \"pval\"))  getAveAbPatterns(se, defaults = c(\"AveExpr\", \"logCPM\"))  getLogFCPatterns(se, defaults = c(\"logFC\", \"LogFC\"))"},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register DE-related fields — registerDEFields","text":"se SummarizedExperiment visualized various DE-related Panels. expected number DE-related fields rowData. fields character vector containing names relevant fields containing DE statistics. Alternatively NULL remove existing setting. patterns character vector containing partial names, match colnames rowData identify relevant fields containing DE statistics. Alternatively NULL remove existing setting. defaults Character vector specifying default patterns provide patterns registered se.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register DE-related fields — registerDEFields","text":"register functions return se, modified contain supplied patterns fields. used suggestions DE-related Panels identify relevant fields. get functions return character vector containing value set corresponding register function; NULL, nothing set.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register DE-related fields — registerDEFields","text":"DE-related Panels need find relevant rowData fields containing p-values, log-fold changes, etc. set appropriate defaults user interface. functions allow user tune definition Panels consider relevant, occasionally necessary DE statistics stored rowData field unusual column name. idea register relevant fields se, can supplied iSEE affected Panels - see Examples. registered fields names appropriate columns rowData containing continuous variables. Columns containing categorical non-atomic variables generally ignored. DE statistic, fields registered se, used directly patterns ignored. registered patterns used partial name matching names appropriate columns rowData. partial matching must exact - regular expressions supported. Matches can occur anywhere name. example, \"PValue\", columns names \"PValue.X\" \"X.PValue\" considered acceptable matches. patterns supplied, Panels use values defaults.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Register DE-related fields — registerDEFields","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerDEFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register DE-related fields — registerDEFields","text":"","code":"# Making up some results with unusual names. se <- SummarizedExperiment(matrix(rnorm(10000), 1000, 10)) rownames(se) <- paste0(\"GENE_\", seq_len(nrow(se))) rowData(se)$pvalue <- runif(nrow(se)) rowData(se)$lfc <- rnorm(nrow(se)) rowData(se)$average <- rnorm(nrow(se))  se <- registerPValueFields(se, \"pvalue\") getPValueFields(se) #> [1] \"pvalue\" se <- registerAveAbFields(se, \"average\") getAveAbFields(se) #> [1] \"average\" se <- registerLogFCFields(se, \"lfc\") getLogFCFields(se) #> [1] \"lfc\"  if (interactive()) {     iSEE(se, initial=list(MAPlot())) }"},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":null,"dir":"Reference","previous_headings":"","what":"Register feature set collections — registerFeatureSetCollections","title":"Register feature set collections — registerFeatureSetCollections","text":"Register feature set collations annotations display FeatureSetTables.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register feature set collections — registerFeatureSetCollections","text":"","code":"registerFeatureSetCollections(se, collections)  registerFeatureSetCommands(se, commands)  getFeatureSetCollections(se)  getFeatureSetCommands(se)"},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register feature set collections — registerFeatureSetCollections","text":"se SummarizedExperiment object used iSEE. collections named list containing one CharacterList objects. entry represents collection feature sets (see Details) named. commands named list containing two character vectors commands use generate collections sets.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register feature set collections — registerFeatureSetCollections","text":"registerFeatureSetCollections registerFeatureSetCommands, modified se returned contains feature set collections commands, respectively. can used FeatureSetTables iSEE calls. getFeatureSetCollections, list CharacterLists returned. Alternatively NULL, list stored registerFeatureSetCollections. getFeatureSetCommands, list commands returned containing collections sets. Alternatively NULL, list stored registerFeatureSetCommands.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register feature set collections — registerFeatureSetCollections","text":"Arbitrary feature sets challenging obvious place store . registerFeatureSetCollections friends insert sets metadata SummarizedExperiment object, allowing corresponding getter functions quickly extract later within iSEE app. collections named list containing CharacterList objects. CharacterList represents collection entry feature set, .e., character vector corresponding row names se. mcols can contain additional per-set fields (e.g., descriptions, enrichment statistics) shown FeatureSetTable. commands list containing: collections, named character vector entry named feature set collection. entry string containing R commands define data.frame named tab, row feature set row names names sets. sets, character vector entry named feature set collection order commands$collections. entry string containing R commands define character vector named selected containing identity rows SummarizedExperiment set interest. (commands can assume .set_id variable present containing name chosen feature set, well se variable containing input SummarizedExperiment object.) neither collections commands provided, previously registered content se removed.","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Register feature set collections — registerFeatureSetCollections","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/registerFeatureSetCollections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register feature set collections — registerFeatureSetCollections","text":"","code":"library(scRNAseq) sce <- LunSpikeInData(location=FALSE)  # Make up some random collections. random <- CharacterList(    Aaron = sample(rownames(sce), 10),    Kevin = sample(rownames(sce), 20),    Charlotte = sample(rownames(sce), 30),    Fed = sample(rownames(sce), 40) ) mcols(random)$p.value <- runif(4)  # Storing the collections inside our SummarizedExperiment. sce <- registerFeatureSetCollections(sce, list(random=random)) getFeatureSetCollections(sce) #> $random #> CharacterList of length 4 #> [[\"Aaron\"]] ENSMUSG00000102057 ENSMUSG00000088735 ... ENSMUSG00000073413 #> [[\"Kevin\"]] ENSMUSG00000104566 ENSMUSG00000022466 ... ENSMUSG00000094020 #> [[\"Charlotte\"]] ENSMUSG00000060771 ENSMUSG00000051456 ... ENSMUSG00000101854 #> [[\"Fed\"]] ENSMUSG00000099145 ENSMUSG00000027088 ... ENSMUSG00000091734 #>   if (interactive()) {     iSEE(sce, initial=list(FeatureSetTable())) }"},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set utilities — utils-geneset","title":"Gene set utilities — utils-geneset","text":"Utility functions control behavior GeneSetTable.","code":""},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set utilities — utils-geneset","text":"","code":".getIdentifierType()  .setIdentifierType(value)  .getOrganism()  .setOrganism(value)  .getGeneSetCommands(collection, mode)  .setGeneSetCommands(value)"},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene set utilities — utils-geneset","text":"value .setIdentifierType .setOrganism, string containing type identifier organism package use. .setGeneSetCommands, named list containing two character vectors, see Details. collection String specifying gene set collection. mode String specifying mode operation returned commands.","code":""},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene set utilities — utils-geneset","text":".getIdentifierType return identifier type use, defaulting \"ENTREZID\". .getOrganism return organism package use, defaulting \"org.Hs.eg.db\". .getGeneSetCommands return: mode=\"show\", string containing R commands create tab, data.frame gene sets given collection. mode=\"extract\", format string containing R commands (formatting) create selected, character vector gene identities selected gene set. format string accept one string argument corresponding deparsed name gene set. setter functions set corresponding option return NULL, invisibly.","code":""},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene set utilities — utils-geneset","text":"default, .getGeneSetCommands extract GO KEGG terms. organism identifier type relates manner default extraction performed. Users can add gene set collections supplying named list .setGeneSetCommands. element list named character vector length two, names \"show\" \"extract\" - see return value . names list unique used GeneSetTable interface. Alternatively, element list may NULL, case excluded interface. useful setting, e.g., GO=NULL ignore -built GO terms.","code":""},{"path":[]},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gene set utilities — utils-geneset","text":"Aaron Lun","code":""},{"path":"https://isee.github.io/iSEEu/reference/utils-geneset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene set utilities — utils-geneset","text":"","code":".setIdentifierType(\"ENSEMBLID\") #> Warning: '.setIdentifierType' is deprecated. #> Use 'setFeatureSetCommands' instead. #> See help(\"Deprecated\") .getIdentifierType() #> Warning: '.getIdentifierType' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \"ENSEMBLID\"  .setOrganism(\"org.Mm.eg.db\") #> Warning: '.setOrganism' is deprecated. #> Use 'setFeatureSetCommands' instead. #> See help(\"Deprecated\") .getOrganism() #> Warning: '.getOrganism' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \"org.Mm.eg.db\"  .getGeneSetCommands(\"GO\", \"show\") #> Warning: '.getGeneSetCommands' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> Warning: '.getOrganism' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> Warning: '.getOrganism' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \".all_terms <- AnnotationDbi::keys(org.Mm.eg.db::org.Mm.eg.db, keytype='GO');\\ntab <- AnnotationDbi::select(GO.db::GO.db, keys=.all_terms, columns='TERM');\\nrownames(tab) <- tab$GOID;\\ntab$GOID <- NULL;\" .getGeneSetCommands(\"GO\", \"extract\") #> Warning: '.getGeneSetCommands' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> Warning: '.getIdentifierType' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> Warning: '.getOrganism' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> Warning: '.getOrganism' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \".genes_in_set <- tryCatch(AnnotationDbi::select(org.Mm.eg.db::org.Mm.eg.db, keys=%s, keytype='GO',\\n   column=\\\"ENSEMBLID\\\")[,\\\"ENSEMBLID\\\"], error=function(e) character(0));\\nselected <- intersect(rownames(se), .genes_in_set)\"  .setGeneSetCommands(     list(AaronRandomCollection=         c(             show='tab <- some_function_to_list_my_gene_sets()',             extract='selected <- some_function_to_get_one_gene_set(%s)'         )     ) ) #> Warning: '.setGeneSetCommands' is deprecated. #> Use 'setFeatureSetCommands' instead. #> See help(\"Deprecated\")  .getGeneSetCommands(\"AaronRandomCollection\", \"show\") #> Warning: '.getGeneSetCommands' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \"tab <- some_function_to_list_my_gene_sets()\" .getGeneSetCommands(\"AaronRandomCollection\", \"extract\") #> Warning: '.getGeneSetCommands' is deprecated. #> Use 'getFeatureSetCommands' instead. #> See help(\"Deprecated\") #> [1] \"selected <- some_function_to_get_one_gene_set(%s)\""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-1171","dir":"Changelog","previous_headings":"","what":"iSEEu 1.17.1","title":"iSEEu 1.17.1","text":"Version bump rebuild classes derived DotPlot.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-1151","dir":"Changelog","previous_headings":"","what":"iSEEu 1.15.1","title":"iSEEu 1.15.1","text":"Expanded content vignette, AggregatedDotPlot() MarkdownBoard() panels highlighted","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-1112","dir":"Changelog","previous_headings":"","what":"iSEEu 1.11.2","title":"iSEEu 1.11.2","text":"Adjusted code correctly parse rename KEGG pathway identifiers.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-1111","dir":"Changelog","previous_headings":"","what":"iSEEu 1.11.1","title":"iSEEu 1.11.1","text":"Update ggplot2 imports AggregatedDotPlot.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-193","dir":"Changelog","previous_headings":"","what":"iSEEu 1.9.3","title":"iSEEu 1.9.3","text":"Fix numbering issue affecting coloring LogFCLogFCPlot panels.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-192","dir":"Changelog","previous_headings":"","what":"iSEEu 1.9.2","title":"iSEEu 1.9.2","text":"Depend iSEEhex package initiate “iSEEverse”.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-171","dir":"Changelog","previous_headings":"","what":"iSEEu 1.7.1","title":"iSEEu 1.7.1","text":"Fix bug causing .setCachedCommonInfo() cache NULL value valid.rowdata.names information DynamicMarkerTable panel instead empty character vector.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-152","dir":"Changelog","previous_headings":"","what":"iSEEu 1.5.2","title":"iSEEu 1.5.2","text":"Fix bug causing AggregatedDotPlot crash column selection transferred. Fix bug retrieving feature set","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-151","dir":"Changelog","previous_headings":"","what":"iSEEu 1.5.1","title":"iSEEu 1.5.1","text":"Fix spelling typo man page.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-135","dir":"Changelog","previous_headings":"","what":"iSEEu 1.3.5","title":"iSEEu 1.3.5","text":"Switch registration storing DE Panel options, via registerPValuePatterns related functions.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-134","dir":"Changelog","previous_headings":"","what":"iSEEu 1.3.4","title":"iSEEu 1.3.4","text":"Support -memory feature set collections statistics via registerFeatureSetCollections.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-133","dir":"Changelog","previous_headings":"","what":"iSEEu 1.3.3","title":"iSEEu 1.3.3","text":"Redistributed documentation panel tours UI-specific tours.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-132","dir":"Changelog","previous_headings":"","what":"iSEEu 1.3.2","title":"iSEEu 1.3.2","text":"Tour-related patch fix builds time .","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-131","dir":"Changelog","previous_headings":"","what":"iSEEu 1.3.1","title":"iSEEu 1.3.1","text":"Added MarkdownBoard panel show arbitrary Markdown-formatted content. Eliminate duplicates available fields, break selectizes.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-119","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.9","title":"iSEEu 1.1.9","text":"Ensure global parameters affect panels construction.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-118","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.8","title":"iSEEu 1.1.8","text":"Added AggregatedDotPlot panel show marker-based dot plots.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-117","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.7","title":"iSEEu 1.1.7","text":"Improved safety correctness calculation number DEGs.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-116","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.6","title":"iSEEu 1.1.6","text":"Version bump trigger reinstallation new iSEE class definitions.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-115","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.5","title":"iSEEu 1.1.5","text":"Added panel-specific tours panel classes via .definePanelTour() generic.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-114","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.4","title":"iSEEu 1.1.4","text":"Generalized DE-related globals work patterns rather directly specifying acceptable names. Align DynamicMarkerTable’s treatment getTableExtraFields() globals strategy.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-113","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.3","title":"iSEEu 1.1.3","text":"Overhauled handling global parameters greater consistency. Added LogFCLogFCPlot plot two DE comparisons . Switched KEGGREST get names pathways.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-112","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.2","title":"iSEEu 1.1.2","text":"Replaced GeneSetTable general FeatureSetTable. Improved handling arbitrary feature sets. Renamed DifferentialStatisticsTable appropriate DynamicMarkerTable. Support inclusion extra fields rowData. Global parameters now affect construction MAPlots VolcanoPlots.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-111","dir":"Changelog","previous_headings":"","what":"iSEEu 1.1.1","title":"iSEEu 1.1.1","text":"Improved documentation ReducedDimensionHexPlot methods.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0998","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.8","title":"iSEEu 0.99.8","text":"Trigger new build single package builder.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0997","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.7","title":"iSEEu 0.99.7","text":"Replace !=\"\" nzchar(). Use 4-space indent. Add info contribute iSEEu, including coding style.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0996","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.6","title":"iSEEu 0.99.6","text":"Trigger new build single package builder.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0995","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.5","title":"iSEEu 0.99.5","text":"Add suggested packages. Add screenshot images vignette. realistic examples vignette. Fix GeneSetTable acknowledge initial value \"Selected\".","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0994","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.4","title":"iSEEu 0.99.4","text":"Fix GitHub action R-CMD-check.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0993","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.3","title":"iSEEu 0.99.3","text":"Set GitHub action R-CMD-check. Remove Travis CI covr code coverage pkgdown site deployment. Fix man page warning.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0992","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.2","title":"iSEEu 0.99.2","text":"Create observer \"Assay\" DiffStatTable. Update NEWS.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0991","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.1","title":"iSEEu 0.99.1","text":"Trigger new build single package builder.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-0990","dir":"Changelog","previous_headings":"","what":"iSEEu 0.99.0","title":"iSEEu 0.99.0","text":"Added panel DifferentialStatisticsTable. Added panel DynamicReducedDimensionPlot. Added panel GeneSetTable. Added panel MAPlot. Added panel ReducedDimensionHexPlot. Added panel VolcanoPlot. Added mode modeEmpty. Added mode modeGating. Added mode modeReducedDim.","code":""},{"path":"https://isee.github.io/iSEEu/news/index.html","id":"iseeu-010","dir":"Changelog","previous_headings":"","what":"iSEEu 0.1.0","title":"iSEEu 0.1.0","text":"iSEEu officially born!","code":""}]
